<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx
	        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	        http://www.springframework.org/schema/aop
	        http://www.springframework.org/schema/aop/spring-aop.xsd "
       default-autowire="byName">

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${workstation.jdbc.driver}"/>
        <property name="url" value="${workstation.jdbc.url}"/>
        <property name="username" value="${workstation.jdbc.username}"/>
        <property name="password" value="${workstation.jdbc.password}"/>
        <!--大于0 ，进行连接空闲时间判断，或为0，对空闲的连接不进行验证 -->
        <property name="minEvictableIdleTimeMillis" value="60000"/>
        <!--失效检查线程运行时间间隔，如果小于等于0，不会启动检查线程 -->
        <property name="timeBetweenEvictionRunsMillis" value="360000"/>
    </bean>

    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!-- 将*Mapper.java 注入到spring -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wuch.medicine.dao"/>
        <property name="sqlSessionFactoryBeanName" value="SqlSessionFactory"/>
    </bean>

    <!-- ================================事务相关控制================================================= -->
    <!-- 对数据源进行事务管理 -->
    <!-- TransactionManager Contorl-->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <aop:config>
        <aop:advisor pointcut="execution(* com.wuch.medicine.service.*.*(..))"
                     advice-ref="txAdvice" />
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*Tx" isolation="READ_COMMITTED" propagation="REQUIRED" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>


</beans>